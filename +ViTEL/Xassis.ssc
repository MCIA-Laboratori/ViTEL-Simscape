component Xassis
% Xassis Vehicle
% Xassis de vehicle genèric per ViTEL. Veure la descripció d'us a la documentació.

% Project: bePower
% Program: Xassis Model
% Author: Carles Colls Castro
% Date Created: 2020 08 18
% Purpose: Component for Driving Cycle Simulation

% Revision History:
% Date        Author      Ref    Revision (Date in YYYYMMDD format)
% 20200818    CCC         001    Versió inicial
% 20200819    CCC         002    Primera versió funcinal senzilla.
% 20200822    CCC         003    Versió modificada compatible amb Driveline.
% 20201128    CCC         004    Acceleració lliure, revisio error roda.
% 20201215    CCC         005    Velocitat Inicial com a parametre.
% 20201218    CCC         006    Full english Implmenentation.
% 20201228    CCC         007    Correction in WindForce Equation not being applied.
% 20210119    CCC         008    Correction in Front-Rear Signs.


% Comentaris:
% 20201128 CCC : S'afegeix temporalment el terme de "Rolling Friction" pel 
% desenvolupament de l'acceleració lliure. Posteriorment es revisara i
% s'implementara a la roda, semblant al model de MATLAB.

inputs
    theta = { 0 , 'rad' }; % Theta
    Vw = { 0, 'm/s' }; % Vw
end

outputs
    Speed = { 0 , 'm/s' }; % Speed
    FzR = { 0, 'N'}; % Fzr
    FzF = { 0, 'N'}; % Fzf
    Accel_free = { 0, 'm/s^2'}; % Free Accel.
    
end

parameters    
    m = { 10 , 'kg' };      % Vehicle Mass
    
    % Geometric parameters:
    l1 = {0.1 , 'm' };  % Front Axel distance to C.M.
    l2 = {0.1 , 'm' };  % Rear Axel distance to C.M.
    h = {0.1 , 'm' };  % C.M. height from the ground
    n = {1,'1'}; % Number of wheels per Axle
    
    % Wind Drag Parameters:
    Cd = {0.4, '1'}; % Vehicle Drag Factor
    A1 = {0.1,'m^2'} % Frontal Area
    ro = {1.18, 'kg/m^3'} % Air density
    
    % Rolling Parameters:
    rho = {0.05, '1'} % Rolling Friction Factor
    m_eps = {0.01, '1'} % Delta Effective Mass
end

parameters(Access = protected)
    g = {9.8 , 'm/s^2'} % Gravity acceleration
    Ff = {1, 'N'} % Force Parameter
end

nodes
    H = foundation.mechanical.translational.translational; % X_react
end

variables(Access = protected)
    Fx = { 0, 'N'};     % Horizontal Force
    Fd = { 0, 'N'}; % Wind Force
    Wx = { 0, 'N'}; % Weight on local x-axis
    Fr = { 0, 'N'}; % Força Rodadura
    Accel = { 0, 'm/s^2'}; % Acceleration    
    m_eff = {0, 'kg'}; % Effective Mass
end

variables
    V = {0, 'm/s'} % Vehicle Speed
end

branches
     Fx : H.f -> *;
end

equations
    % Massa Efectiva:
    m_eff == m*(1+m_eps);
    
    % Additional equation:
    Accel == der(V);
    
    % Vehicle Speed Output:
    V == H.v;
    Speed == H.v;
    
    
    % Drag Force Definition (equation):
    % vehicle: + -->
    % wind: + --> 
    Fd == -(0.5*A1*ro*Cd*(V-Vw)^2)*sign(V-Vw);

    % Weight decomposition, Horizontal Force:
    Wx == m*g*sin(theta);
    
    % Rolling Force:
    Fr == rho*m*g*cos(theta);
    
    % Equilibrium: Momentum on O1 and O2.
    n * FzR ==   (m*Accel - Fd)*h/(l1+l2) + m*g*cos(theta)*l2/(l1+l2);
    n * FzF == - (m*Accel - Fd)*h/(l1+l2) + m*g*cos(theta)*l2/(l1+l2);
    
    % Equilibrium: Forces on X axis.
    m*Accel == n * Fx + Fd - Wx;   % + Fr; % Validation Pending
    
    Accel_free == (Fd - Wx)/m_eff; % +Fr; % Validation Pending
      
end


%% Annotations
annotations
    FzR : Side = bottom;
    FzF : Side = bottom;    
end
end % component


